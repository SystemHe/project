#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UseLinqToInsert
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class linqtisqlClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insert员工信息(员工信息 instance);
    partial void Update员工信息(员工信息 instance);
    partial void Delete员工信息(员工信息 instance);
    #endregion
		
		public linqtisqlClassesDataContext() : 
				base(global::UseLinqToInsert.Properties.Settings.Default.testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqtisqlClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtisqlClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtisqlClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtisqlClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<员工信息> 员工信息
		{
			get
			{
				return this.GetTable<员工信息>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.员工信息")]
	public partial class 员工信息 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _员工编号;
		
		private string _员工姓名;
		
		private string _性别;
		
		private string _年龄;
		
		private string _电话;
		
		private string _地址;
		
		private string _邮箱;
		
		private string _员工状态;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On员工编号Changing(string value);
    partial void On员工编号Changed();
    partial void On员工姓名Changing(string value);
    partial void On员工姓名Changed();
    partial void On性别Changing(string value);
    partial void On性别Changed();
    partial void On年龄Changing(string value);
    partial void On年龄Changed();
    partial void On电话Changing(string value);
    partial void On电话Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void On邮箱Changing(string value);
    partial void On邮箱Changed();
    partial void On员工状态Changing(string value);
    partial void On员工状态Changed();
    #endregion
		
		public 员工信息()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_员工编号", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 员工编号
		{
			get
			{
				return this._员工编号;
			}
			set
			{
				if ((this._员工编号 != value))
				{
					this.On员工编号Changing(value);
					this.SendPropertyChanging();
					this._员工编号 = value;
					this.SendPropertyChanged("员工编号");
					this.On员工编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_员工姓名", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string 员工姓名
		{
			get
			{
				return this._员工姓名;
			}
			set
			{
				if ((this._员工姓名 != value))
				{
					this.On员工姓名Changing(value);
					this.SendPropertyChanging();
					this._员工姓名 = value;
					this.SendPropertyChanged("员工姓名");
					this.On员工姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_性别", DbType="NChar(10)")]
		public string 性别
		{
			get
			{
				return this._性别;
			}
			set
			{
				if ((this._性别 != value))
				{
					this.On性别Changing(value);
					this.SendPropertyChanging();
					this._性别 = value;
					this.SendPropertyChanged("性别");
					this.On性别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_年龄", DbType="NChar(10)")]
		public string 年龄
		{
			get
			{
				return this._年龄;
			}
			set
			{
				if ((this._年龄 != value))
				{
					this.On年龄Changing(value);
					this.SendPropertyChanging();
					this._年龄 = value;
					this.SendPropertyChanged("年龄");
					this.On年龄Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_电话", DbType="NChar(10)")]
		public string 电话
		{
			get
			{
				return this._电话;
			}
			set
			{
				if ((this._电话 != value))
				{
					this.On电话Changing(value);
					this.SendPropertyChanging();
					this._电话 = value;
					this.SendPropertyChanged("电话");
					this.On电话Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_地址", DbType="NChar(10)")]
		public string 地址
		{
			get
			{
				return this._地址;
			}
			set
			{
				if ((this._地址 != value))
				{
					this.On地址Changing(value);
					this.SendPropertyChanging();
					this._地址 = value;
					this.SendPropertyChanged("地址");
					this.On地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_邮箱", DbType="NChar(10)")]
		public string 邮箱
		{
			get
			{
				return this._邮箱;
			}
			set
			{
				if ((this._邮箱 != value))
				{
					this.On邮箱Changing(value);
					this.SendPropertyChanging();
					this._邮箱 = value;
					this.SendPropertyChanged("邮箱");
					this.On邮箱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_员工状态", DbType="NChar(10)")]
		public string 员工状态
		{
			get
			{
				return this._员工状态;
			}
			set
			{
				if ((this._员工状态 != value))
				{
					this.On员工状态Changing(value);
					this.SendPropertyChanging();
					this._员工状态 = value;
					this.SendPropertyChanged("员工状态");
					this.On员工状态Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
